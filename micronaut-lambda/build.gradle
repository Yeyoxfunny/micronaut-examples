plugins {
    id("io.micronaut.library") version "1.5.4"
    id("com.github.johnrengelman.shadow") version "7.0.0"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

micronaut {
    runtime("lambda")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.smorales.*")
    }
}

dependencies {
    annotationProcessor("org.projectlombok:lombok")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.aws:micronaut-aws-parameter-store")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")

    implementation("io.micronaut.aws:micronaut-function-aws")
    implementation("io.micronaut.aws:micronaut-aws-sdk-v2")
    implementation("software.amazon.awssdk:secretsmanager")
    implementation("software.amazon.awssdk:s3")
    implementation("com.amazonaws:aws-lambda-java-events:3.10.0")

    testImplementation("io.micronaut:micronaut-http-client")
}


java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}



tasks.named("assemble") {
    dependsOn(":shadowJar")
}